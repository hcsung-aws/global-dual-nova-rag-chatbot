# Example Terraform Variables Configuration
# Copy this file to terraform.tfvars and update with your values

# AWS Configuration
aws_region = "us-east-1"
environment = "production"
project_name = "global-dual-nova-chatbot"

# Required: Amazon Bedrock Knowledge Base Configuration
# Create a Knowledge Base in Amazon Bedrock first, then provide the ID here
knowledge_base_id = "XXXXXXXXXX"  # Replace with your Knowledge Base ID
data_source_ids = []              # Optional: specific data source IDs

# Optional: Notion Integration
# notion_token = "secret_xxxxxxxxxx"  # Uncomment and add your Notion token if needed

# Network Configuration
vpc_cidr = "10.0.0.0/16"
public_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24"]
private_subnet_cidrs = ["10.0.10.0/24", "10.0.20.0/24"]

# ECS Configuration
ecs_cpu = 512           # CPU units (256, 512, 1024, 2048, 4096)
ecs_memory = 1024       # Memory in MB
ecs_desired_count = 1   # Number of tasks to run

# Auto Scaling Configuration
enable_auto_scaling = true
ecs_min_capacity = 1
ecs_max_capacity = 10
auto_scaling_target_cpu = 70
auto_scaling_target_memory = 80

# Logging Configuration
enable_logging = true
log_retention_days = 7

# HTTPS Configuration (Optional)
# enable_https = true
# ssl_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
# domain_name = "chatbot.example.com"

# =============================================================================
# SECURITY AND ACCESS CONTROL CONFIGURATION
# =============================================================================

# Option 1: Public Access (NOT RECOMMENDED for production)
# Allows access from anywhere on the internet
restrict_public_access = false
allowed_cidr_blocks = ["0.0.0.0/0"]

# Option 2: Restricted Access (RECOMMENDED for production)
# Only allows access from specified IP addresses
# Uncomment and configure the following lines:
# restrict_public_access = true
# admin_ip_addresses = [
#   "203.0.113.1",    # Replace with your office IP
#   "198.51.100.1",   # Replace with your home IP
#   "192.0.2.1"       # Add more IPs as needed
# ]

# Option 3: Custom Access Rules (Advanced)
# Define specific CIDR blocks and ports for fine-grained control
# custom_access_rules = [
#   {
#     description = "Office network HTTP access"
#     cidr_block  = "203.0.113.0/24"
#     from_port   = 80
#     to_port     = 80
#     protocol    = "tcp"
#   },
#   {
#     description = "VPN network HTTPS access"
#     cidr_block  = "198.51.100.0/24"
#     from_port   = 443
#     to_port     = 443
#     protocol    = "tcp"
#   }
# ]

# VPC Access (useful for testing from AWS environment)
enable_vpc_access = false

# =============================================================================
# DEPLOYMENT EXAMPLES
# =============================================================================

# Example 1: Development Environment (Open Access)
# restrict_public_access = false
# allowed_cidr_blocks = ["0.0.0.0/0"]
# enable_vpc_access = true

# Example 2: Production Environment (Restricted Access)
# restrict_public_access = true
# admin_ip_addresses = ["YOUR.IP.ADDRESS.HERE"]
# enable_https = true
# ssl_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id"

# Example 3: Corporate Environment (Network-based Access)
# restrict_public_access = false
# allowed_cidr_blocks = ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
# custom_access_rules = [
#   {
#     description = "Corporate network"
#     cidr_block  = "203.0.113.0/24"
#     from_port   = 80
#     to_port     = 80
#     protocol    = "tcp"
#   }
# ]

# Additional Tags
tags = {
  Owner = "YourName"
  Team = "YourTeam"
  CostCenter = "YourCostCenter"
  Environment = "production"
  Project = "Global Dual Nova Chatbot"
}
